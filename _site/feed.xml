<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-11-06T16:22:24+09:00</updated><id>http://localhost:4000/</id><title type="html">k3y6reak</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><entry><title type="html">Dex</title><link href="http://localhost:4000/technique/android/2017/11/03/Dex.html" rel="alternate" type="text/html" title="Dex" /><published>2017-11-03T17:12:00+09:00</published><updated>2017-11-03T17:12:00+09:00</updated><id>http://localhost:4000/technique/android/2017/11/03/Dex</id><content type="html" xml:base="http://localhost:4000/technique/android/2017/11/03/Dex.html">&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;dex&quot;&gt;Dex&lt;/h3&gt;

&lt;p&gt;Dex는 Android에서 사용되는 파일로 Windows의 PE 파일과 같은 존재입니다. Dex는 Dalvik Executable을 줄여놓은 것으로 Dalvik Virtual Machine에서 동작합니다.&lt;/p&gt;

&lt;p&gt;Dex의 Signature는 &lt;code class=&quot;highlighter-rouge&quot;&gt;64 65 78 0a 30 33 35 00(dex\n035)&lt;/code&gt; 로 시작합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;k3y6reak:SoundMeter k3y6reak&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ls
AndroidManifest.xml	classes.dex		resources.arsc
META-INF		res
k3y6reak:SoundMeter k3y6reak&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hexdump -C classes.dex | more
00000000  64 65 78 0a 30 33 35 00  e2 50 cf a8 1b 24 b9 ce  |dex.035..P...&lt;span class=&quot;nv&quot;&gt;$.&lt;/span&gt;.|&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;unzip&lt;/code&gt;으로 추출한 classes.dex 파일을 분석해야 하는데 이때 사용하는 툴이 dex2jar가 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://sourceforge.net/projects/dex2jar/&quot;&gt;dex2jar&lt;/a&gt;에서 해당 파일을 다운로드 받습니다.&lt;/p&gt;

&lt;p&gt;압축을 해제한 후 Ubuntu에서 사용하기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;d2j-dex2jar.sh&lt;/code&gt;를 이용해 &lt;code class=&quot;highlighter-rouge&quot;&gt;jar&lt;/code&gt; 파일을 추출합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;root@ubuntu:~/dex2jar# &lt;/span&gt;ls
d2j-baksmali.bat   d2j-dex-recompute-checksum.bat  d2j-jar2jasmin.bat  d2j-std-apk.bat
d2j-baksmali.sh    d2j-dex-recompute-checksum.sh   d2j-jar2jasmin.sh   d2j-std-apk.sh
d2j-dex2jar.bat    d2j_invoke.bat                  d2j-jasmin2jar.bat  lib
d2j-dex2jar.sh     d2j_invoke.sh                   d2j-jasmin2jar.sh   SoundMeter.apk
d2j-dex2smali.bat  d2j-jar2dex.bat                 d2j-smali.bat
d2j-dex2smali.sh   d2j-jar2dex.sh                  d2j-smali.sh
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:~/dex2jar# &lt;/span&gt;./d2j-dex2jar.sh SoundMeter.apk
dex2jar SoundMeter.apk -&amp;gt; ./SoundMeter-dex2jar.jar
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:~/dex2jar# &lt;/span&gt;ls
d2j-baksmali.bat   d2j-dex-recompute-checksum.bat  d2j-jar2jasmin.bat  d2j-std-apk.bat
d2j-baksmali.sh    d2j-dex-recompute-checksum.sh   d2j-jar2jasmin.sh   d2j-std-apk.sh
d2j-dex2jar.bat    d2j_invoke.bat                  d2j-jasmin2jar.bat  lib
d2j-dex2jar.sh     d2j_invoke.sh                   d2j-jasmin2jar.sh   SoundMeter.apk
d2j-dex2smali.bat  d2j-jar2dex.bat                 d2j-smali.bat       SoundMeter-dex2jar.jar
d2j-dex2smali.sh   d2j-jar2dex.sh                  d2j-smali.sh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SoundMeter-dex2jar.jar&lt;/code&gt;파일이 추출된 것을 볼 수 있습니다. 이제 jar 파일을 다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;Java Decompiler&lt;/code&gt;를 이용해 자바코드로 변환합니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jd.benow.ca/&quot;&gt;JD-GUI&lt;/a&gt;에서 운영체제에 맞는 파일을 받아 실행합니다.
jar 파일을 받은경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;java -jar jd-gui-1.4.0.jar&lt;/code&gt; 로 실행하면 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/android/dex/execute_jdgui.png&quot; alt=&quot;jd_gui&quot; /&gt;&lt;/p&gt;

&lt;p&gt;실행 후 해당 apk를 드래그 앤 드롭으로 넣어주면 자동으로 분석을 해줍니다.&lt;/p&gt;

&lt;p&gt;또 다른 방법으로는 &lt;code class=&quot;highlighter-rouge&quot;&gt;010 Editor&lt;/code&gt;를 사용하는 방법입니다. &lt;a href=&quot;http://www.sweetscape.com/010editor/&quot;&gt;010Editor&lt;/a&gt;에서 다운로드 받을 수 있습니다. 010 Editor는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Template&lt;/code&gt;을 이용해 파일의 구조를 분석할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/strazzere/010Editor-stuff/tree/master/Templates&quot;&gt;Templates_Github&lt;/a&gt;에서 여러 종류의 템플릿을 받을 수 있으며 여기서 사용할 파일은 &lt;code class=&quot;highlighter-rouge&quot;&gt;DEXTemplate.bt&lt;/code&gt;이므로 이 파일을 받아주면 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;classes.dex&lt;/code&gt;파일을 010 Editor에 올리고 다운로드 받은 Dex template을 실행하면 됩니다.
상단의 메뉴에서 Templates - Open Template - DexTemplate.bt - Run Template를 선택합니다.&lt;/p&gt;

&lt;p&gt;Github에서 받은 파일이 에러 간다면 &lt;a href=&quot;https://www.sweetscape.com/010editor/templates/&quot;&gt;Templates_sweetscape&lt;/a&gt;에서 받아서 실행해보세요.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/android/dex/editor.png&quot; alt=&quot;editor&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Dex</summary></entry><entry><title type="html">Install Java</title><link href="http://localhost:4000/misc/2017/11/01/Java_install.html" rel="alternate" type="text/html" title="Install Java" /><published>2017-11-01T19:43:00+09:00</published><updated>2017-11-01T19:43:00+09:00</updated><id>http://localhost:4000/misc/2017/11/01/Java_install</id><content type="html" xml:base="http://localhost:4000/misc/2017/11/01/Java_install.html">&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;ubuntu에서-java-설치하기&quot;&gt;Ubuntu에서 Java 설치하기&lt;/h3&gt;

&lt;p&gt;자바를 설치하는 여러 블로그를 살펴보면 각각 다른 방법들로 설치를 많이 합니다.
여러 방법들을 시도해보고 적성합니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/index.html&quot;&gt;Oracle&lt;/a&gt;에 접속하면 최신버전의 Java SE를 받을 수 있습니다.&lt;/p&gt;

&lt;p&gt;하지만 개발된 자바 프로그램들이 버전에 맞지 않아 실행이 안되는 경우도 발생합니다. Android를 분석하는데 Jadx 툴을 사용하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Java SE 7&lt;/code&gt; 버전을 사용해야 합니다.&lt;/p&gt;

&lt;p&gt;위 사이트에 접속 후 맨 밑의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Java Archive&lt;/code&gt; 항목의 Download를 눌러 해당 OS에 맞는 파일을 다운로드 합니다.&lt;/p&gt;

&lt;p&gt;Ubuntu에서 설치하기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Linux x64 (jdk-7u80-linux-x64.tar.gz)&lt;/code&gt;를 다운받습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;root@ubuntu:/home/k3y6reak/Desktop# &lt;/span&gt;mv jdk-7u80-linux-x64.tar.gz /var/cache/oracle-jdk7-installer/
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:/home/k3y6reak/Desktop# &lt;/span&gt;apt-get install python-software-properties
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:/home/k3y6reak/Desktop# &lt;/span&gt;add-apt-repository ppa:webupd8team/java
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:/home/k3y6reak/Desktop# &lt;/span&gt;apt-get update&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;여기서 JDK 버전에 따라서 &lt;code class=&quot;highlighter-rouge&quot;&gt;java&lt;/code&gt;뒤에 숫자를 다르게 합니다. 7버전을 받았으므로 java7이 됩니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;root@ubuntu:/home/k3y6reak/Desktop# &lt;/span&gt;apt-get install oracle-java7-installer&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;그 다음으로 Java를 사용할 수 있도록 환경변수를 설정해 주어야 합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;vim /etc/bash.bashrc/&lt;/code&gt; 를 이용하여 bash.bashrc의 하단에 &lt;code class=&quot;highlighter-rouge&quot;&gt;export JAVA_HOME=/usr/lib/jvm/java-7-oracle&lt;/code&gt;를 작성합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;root@ubuntu:/home/k3y6reak/Desktop# &lt;/span&gt;vim /etc/bash.bashrc

&lt;span class=&quot;c&quot;&gt;# if the command-not-found package is installed, use it                                                       &lt;/span&gt;
 54 &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -x /usr/lib/command-not-found -o -x /usr/share/command-not-found/command-not-found &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then               
 &lt;/span&gt;55     &lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;command_not_found_handle &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;                                                                        56     ┆   ┆   &lt;span class=&quot;c&quot;&gt;# check because c-n-f could've been removed in the meantime                                       &lt;/span&gt;
 57     ┆   ┆   ┆   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -x /usr/lib/command-not-found &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then                                                    
 &lt;/span&gt;58         ┆  /usr/lib/command-not-found -- &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;                                                                 
 59     ┆   ┆   ┆   ┆  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt;                                                                                  
 60     ┆   ┆   ┆   &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -x /usr/share/command-not-found/command-not-found &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;then                              
 &lt;/span&gt;61         ┆  /usr/share/command-not-found/command-not-found -- &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;                                             
 62     ┆   ┆   ┆   ┆  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt;                                                                                   63         &lt;span class=&quot;k&quot;&gt;else                                                                                                  
 &lt;/span&gt;64         ┆  &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;%s: command not found&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &amp;gt;&amp;amp;2                                                          
 65         ┆  &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;127                                                                                         
 66         &lt;span class=&quot;k&quot;&gt;fi                                                                                                    
 &lt;/span&gt;67     &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;                                                                                                         
 68 &lt;span class=&quot;k&quot;&gt;fi                                                                                                            
 &lt;/span&gt;69                                                                                                               
 70 &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/lib/jvm/java-7-oracle/  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;source /etc/bash.bashrc&lt;/code&gt;를 입력해 줍니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;root@ubuntu:/home/k3y6reak/Desktop# &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; /etc/bash.bashrc&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;정상적으로 Java가 설치가 되었는지 확인하기 위해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;java -version&lt;/code&gt;을 입력합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;root@ubuntu:/home/k3y6reak/Desktop# &lt;/span&gt;java -version
java version &lt;span class=&quot;s2&quot;&gt;&quot;1.7.0_80&quot;&lt;/span&gt;
Java&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;TM&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; SE Runtime Environment &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;build 1.7.0_80-b15&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Java HotSpot&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;TM&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 64-Bit Server VM &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;build 24.80-b11, mixed mode&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;정상적으로 설치가 완료 됐습니다.&lt;/p&gt;</content><author><name></name></author><summary type="html">Ubuntu에서 Java 설치하기</summary></entry><entry><title type="html">Extract APK</title><link href="http://localhost:4000/technique/android/2017/10/31/Extract_apk.html" rel="alternate" type="text/html" title="Extract APK" /><published>2017-10-31T19:55:00+09:00</published><updated>2017-10-31T19:55:00+09:00</updated><id>http://localhost:4000/technique/android/2017/10/31/Extract_apk</id><content type="html" xml:base="http://localhost:4000/technique/android/2017/10/31/Extract_apk.html">&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;apk-추출하기&quot;&gt;APK 추출하기&lt;/h3&gt;

&lt;p&gt;APK를 분석하기 위해서는 APK 파일의 구조와 어떤 방식으로 동작하는지에 대해서 알아야 합니다. 먼저 APK 내에는 어떤 파일들이 존재하는지 알아보도록 합시다.
&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;unzip&quot;&gt;Unzip&lt;/h4&gt;

&lt;p&gt;먼저 Chrome.apk를 받아 &lt;code class=&quot;highlighter-rouge&quot;&gt;Hex Editor&lt;/code&gt;를 이용해 열어봅니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-hex&quot; data-lang=&quot;hex&quot;&gt;Offset(d)00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15
00000000 50 4B 03 04 0A 00 00 08 00 00 00 00 21 3A 64 68 PK..........!:dh&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Hex 값을 살펴본 결과 &lt;code class=&quot;highlighter-rouge&quot;&gt;PK&lt;/code&gt;로 시작하는 것을 알 수 있습니다. PK로 시작하면 압축해제를 통해서 APK 안의 내용을 추출할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;unzip [apk 이름] -d [디렉토리 이름]&lt;/code&gt;을 이용해 해제할 디렉토리에 chrome.apk를 해제합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;root@ubuntu:/home/k3y6reak/Desktop# &lt;/span&gt;unzip chrome.apk -d Unzip_chrome/
Archive:  chrome.apk
 extracting: Unzip_chrome/assets/chrome_100_percent.pak  
 extracting: Unzip_chrome/assets/icudtl.dat  
 extracting: Unzip_chrome/assets/natives_blob.bin  
 extracting: Unzip_chrome/assets/resources.pak  
 extracting: Unzip_chrome/assets/snapshot_blob_32.bin  
 extracting: Unzip_chrome/assets/webapk_dex_version.txt  
 extracting: Unzip_chrome/lib/armeabi-v7a/crazy.libchrome.so  
 extracting: Unzip_chrome/lib/armeabi-v7a/libchrome.1847.114.so  
 extracting: Unzip_chrome/lib/armeabi-v7a/libchrome.1916.122.so  
 extracting: Unzip_chrome/lib/armeabi-v7a/libchrome.1916.138.so  
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;중략...&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  inflating: Unzip_chrome/res/xml/usb_device_preferences.xml  
  inflating: Unzip_chrome/res/xml/website_preferences.xml  
  inflating: Unzip_chrome/META-INF/CERT.SF  
  inflating: Unzip_chrome/META-INF/CERT.RSA  
  inflating: Unzip_chrome/META-INF/MANIFEST.MF  
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:/home/k3y6reak/Desktop# &lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;해당 디렉토리에 접근하여 어떤 파일이 존재하는지 살펴보면 아래와 같습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;root@ubuntu:/home/k3y6reak/Desktop/Unzip_chrome# &lt;/span&gt;ls -al
total 10368
drwxr-xr-x  6 root     root        4096 Oct 31 20:05 .
drwxr-xr-x  4 k3y6reak k3y6reak    4096 Oct 31 20:05 ..
-rw-r--r--  1 root     root       95976 Jan  1  2009 AndroidManifest.xml
drwxr-xr-x  2 root     root        4096 Oct 31 20:05 assets
-rw-r--r--  1 root     root     6282576 Jan  1  2009 classes.dex
drwxr-xr-x  3 root     root        4096 Oct 31 20:05 lib
drwxr-xr-x  2 root     root        4096 Oct 31 20:05 META-INF
drwxr-xr-x 70 root     root        4096 Oct 31 20:05 res
-rw-r--r--  1 root     root     4206860 Jan  1  2009 resources.arsc&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;apktool&quot;&gt;Apktool&lt;/h4&gt;

&lt;p&gt;이번에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;apktool&lt;/code&gt;을 이용해서 추출해 보도록 하겠습니다. apktool은 자바가 필요하며 사전에 설치가 돼있어야 합니다.
&lt;a href=&quot;https://k3y6reak.github.io/misc/2017/11/01/Java_install.html&quot;&gt;자바 설치&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;먼저 apktool을 설치해 보겠습니다. &lt;a href=&quot;https://ibotpeaches.github.io/Apktool/install&quot;&gt;여기&lt;/a&gt;에 접속하면 각 운영체제별 설치방법이 나와있습니다. Ubuntu를 기준으로 Linux 설치방법을 따르면 됩니다.&lt;/p&gt;

&lt;p&gt;여기서 주의할 점은 Ubuntu 내에서 apt-get 을 이용해 미리 설치하신 분은 낮은 버전으로 실행되기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get purge apktool&lt;/code&gt;을 한 뒤 설치를 해주면 됩니다.&lt;/p&gt;

&lt;p&gt;wrapper script 파일을 apktool로 저장합니다. apktool_2.3.0.jar을 apktool.jar로 저장합니다.
이 두 파일을 &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/bin&lt;/code&gt;에 저장한 뒤 &lt;code class=&quot;highlighter-rouge&quot;&gt;chmod +x apktool apktool.jar&lt;/code&gt;을 해줍니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;root@ubuntu:/home/k3y6reak/Desktop# &lt;/span&gt;mv wrapperscript.txt apktool
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:/home/k3y6reak/Desktop# &lt;/span&gt;mv apktool_2.3.0.jar apktool.jar
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:/home/k3y6reak/Desktop# &lt;/span&gt;chmod +x apktool apktool.jar
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:/home/k3y6reak/Desktop# &lt;/span&gt;mv apktool apktool.jar /usr/bin
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:/home/k3y6reak/Desktop# &lt;/span&gt;apktool
Apktool v2.3.0 - a tool &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;reengineering Android apk files
with smali v2.2.1 and baksmali v2.2.1
Copyright 2014 Ryszard Wiśniewski &amp;lt;brut.alll@gmail.com&amp;gt;
Updated by Connor Tumbleson &amp;lt;connor.tumbleson@gmail.com&amp;gt;

usage: apktool
 -advance,--advanced   prints advance information.
 -version,--version    prints the version &lt;span class=&quot;k&quot;&gt;then &lt;/span&gt;exits
usage: apktool &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;|install-framework &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;options] &amp;lt;framework.apk&amp;gt;
 -p,--frame-path &amp;lt;dir&amp;gt;   Stores framework files into &amp;lt;dir&amp;gt;.
 -t,--tag &amp;lt;tag&amp;gt;          Tag frameworks using &amp;lt;tag&amp;gt;.
usage: apktool d[ecode] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;options] &amp;lt;file_apk&amp;gt;
 -f,--force              Force delete destination directory.
 -o,--output &amp;lt;dir&amp;gt;       The name of folder that gets written. Default is apk.out
 -p,--frame-path &amp;lt;dir&amp;gt;   Uses framework files located &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;dir&amp;gt;.
 -r,--no-res             Do not decode resources.
 -s,--no-src             Do not decode sources.
 -t,--frame-tag &amp;lt;tag&amp;gt;    Uses framework files tagged by &amp;lt;tag&amp;gt;.
usage: apktool b[uild] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;options] &amp;lt;app_path&amp;gt;
 -f,--force-all          Skip changes detection and build all files.
 -o,--output &amp;lt;dir&amp;gt;       The name of apk that gets written. Default is dist/name.apk
 -p,--frame-path &amp;lt;dir&amp;gt;   Uses framework files located &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &amp;lt;dir&amp;gt;.

For additional info, see: http://ibotpeaches.github.io/Apktool/ 
For smali/baksmali info, see: https://github.com/JesusFreke/smali&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이제 apktool을 사용할 수 있으므로 이를 이용해 chrome.apk를 Decompile을 해보겠습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;root@ubuntu:/home/k3y6reak/Desktop# &lt;/span&gt;apktool d chrome.apk
I: Using Apktool 2.3.0 on chrome.apk
I: Loading resource table...
I: Decoding AndroidManifest.xml with resources...
S: WARNING: Could not write to &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/root/.local/share/apktool/framework&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, using /tmp instead...
S: Please be aware this is a volatile directory and frameworks could go missing, please utilize --frame-path &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;the default storage directory is unavailable
I: Loading resource table from file: /tmp/1.apk
I: Regular manifest package...
I: Decoding file-resources...
I: Decoding values &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; XMLs...
I: Baksmaling classes.dex...
I: Copying assets and libs...
I: Copying unknown files...
I: Copying original files...
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:/home/k3y6reak/Desktop# &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;chrome
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:/home/k3y6reak/Desktop/chrome# &lt;/span&gt;ls
AndroidManifest.xml  apktool.yml  assets  lib  original  res  smali&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;apktool 버전이 낮은 경우 main함수에서 null point exception이 발생할 수 있습니다.&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;jadx&quot;&gt;jadx&lt;/h4&gt;

&lt;p&gt;또 다른 방법으로는 jadx를 이용하는 방법이 있습니다. 마찬가지로 Java가 필요하기 때문에 자바를 설치해야 합니다. 여기서 주의할 점은 8버전을 설치하면 jadx가 실행되지 않을 수 있습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;7버전으로 설치해야 합니다.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git clone https://github.com/skylot/jadx.git&lt;/code&gt;을 통해 해당 파일을 다운로드 받습니다.
다운받은 jadx 디렉토리에 접근하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;./gradlew dist&lt;/code&gt;를 입력하여 컴파일을 합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;root@ubuntu:~# &lt;/span&gt;git clone https://github.com/skylot/jadx.git
Cloning into &lt;span class=&quot;s1&quot;&gt;'jadx'&lt;/span&gt;...
remote: Counting objects: 11711, &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;.
remote: Total 11711 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;delta 0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, reused 0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;delta 0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, pack-reused 11710
Receiving objects: 100% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;11711/11711&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 5.31 MiB | 1.43 MiB/s, &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;.
Resolving deltas: 100% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6143/6143&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;.
Checking connectivity... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;.
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:~# &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;jadx
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:~/jadx# &lt;/span&gt;./gradlew dist
:jadx-core:compileJava
warning: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;options] bootstrap class path not &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;conjunction with -source 1.6
/root/jadx/jadx-core/src/main/java/jadx/core/xmlgen/ParserConstants.java:156: warning: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;serial] serializable class &amp;lt;anonymous jadx.core.xmlgen.ParserConstants&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&amp;gt; has no definition of serialVersionUID
        protected static final Map&amp;lt;Integer, String&amp;gt; PLURALS_MAP &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; new HashMap&amp;lt;Integer, String&amp;gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                                                                                                 ^
/root/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/LiteralArg.java:68: warning: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;deprecation] literalToString&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;long,ArgType&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;TypeGen has been deprecated
                        String value &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; TypeGen.literalToString&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;literal, getType&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;;
                                              ^
3 warnings
:jadx-core:compileGroovy UP-TO-DATE
:jadx-core:processResources
:jadx-core:classes
:jadx-core:jar
:jadx-cli:compileJava
warning: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;options] bootstrap class path not &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;conjunction with -source 1.6
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;중략...&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
:jadx-gui:installDist
:copyArtifacts
:pack
:dist

BUILD SUCCESSFUL

Total &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;: 7.471 secs

This build could be faster, please consider using the Gradle Daemon: https://docs.gradle.org/2.14.1/userguide/gradle_daemon.html
root@ubuntu:~/jadx#&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;컴파일을 모두 마치면 &lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt;라는 디렉토리가 생성되는데 &lt;code class=&quot;highlighter-rouge&quot;&gt;build/jadx/bin/&lt;/code&gt;에 jadx 실행파일이 생성된 것을 볼 수 있습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;root@ubuntu:~/jadx# &lt;/span&gt;ls
build  build.gradle  gradle  gradlew  gradlew.bat  jadx-cli  jadx-core  jadx-gui  jadx-samples  jadx-test-app  LICENSE  NOTICE  README.md  settings.gradle  version
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:~/jadx# &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;build/
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:~/jadx/build# &lt;/span&gt;ls
jadx  jadx-0.6.1.zip
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:~/jadx/build# &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;jadx
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:~/jadx/build/jadx# &lt;/span&gt;ls
bin  lib  LICENSE  NOTICE  README.md
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:~/jadx/build/jadx# &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;bin
&lt;span class=&quot;gp&quot;&gt;root@ubuntu:~/jadx/build/jadx/bin# &lt;/span&gt;ls
jadx  jadx.bat  jadx-gui  jadx-gui.bat&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jadx [apk 이름]&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;jadx-gui&lt;/code&gt;로 실행 후 apk 파일을 넣어주면 됩니다.&lt;/p&gt;

&lt;p&gt;이 외에 몇가지 부분은 나중에 추가하도록 하겠습니다.&lt;/p&gt;</content><author><name></name></author><summary type="html">APK 추출하기</summary></entry><entry><title type="html">Install Genymotion</title><link href="http://localhost:4000/technique/android/2017/10/30/Genymotion_install.html" rel="alternate" type="text/html" title="Install Genymotion" /><published>2017-10-30T17:38:00+09:00</published><updated>2017-10-30T17:38:00+09:00</updated><id>http://localhost:4000/technique/android/2017/10/30/Genymotion_install</id><content type="html" xml:base="http://localhost:4000/technique/android/2017/10/30/Genymotion_install.html">&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h3 id=&quot;genymotion-설치&quot;&gt;GenyMotion 설치&lt;/h3&gt;
&lt;p&gt;&lt;br /&gt;
안드로이드는 apk 파일로 실행되기 때문에 이를 실행할 수 있는 애뮬레이터가 필요합니다. 보통 사용하는 애뮬레이터는 Nox, Momo 등이 있지만 주로 사용할 것은 GenyMotion 입니다. &lt;a href=&quot;https://genymotion.com&quot;&gt;Genymotion&lt;/a&gt;에 접속해서 가입 후 다운로드를 받습니다.&lt;/p&gt;

&lt;p&gt;Windows의 경우 Virtual Box를 포함한 파일을 받아 설치하고 MacOS는 같이 설치가 됩니다.&lt;/p&gt;

&lt;p&gt;GenyMotion은 안드로이드의 버전과 디바이스를 선택할 수 있는데, &lt;code class=&quot;highlighter-rouge&quot;&gt;Android 4.1.1&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Nexus S&lt;/code&gt;를 선택하여 설치해 줍니다. 설치를 완료하면 아래와 같이 apk를 실행할 수 있는 안드로이드 4.1.1이 실행됩니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/android/install_genymotion/execute_android.png&quot; alt=&quot;execute_android&quot; /&gt;&lt;/p&gt;

&lt;p&gt;GenyMotion에 바로 APK 파일을 넣어서 설치를 할 수 있습니다. 하지만 안되는 경우도 있는데 이 경우에는 &lt;a href=&quot;https://github.com/k3y6reak/Android/tree/master/Genymotion&quot;&gt;여기&lt;/a&gt;에서 다운받아 해당 애뮬레이터에 넣어준 뒤 APK를 설치하면 됩니다.&lt;/p&gt;</content><author><name></name></author><summary type="html">GenyMotion 설치 안드로이드는 apk 파일로 실행되기 때문에 이를 실행할 수 있는 애뮬레이터가 필요합니다. 보통 사용하는 애뮬레이터는 Nox, Momo 등이 있지만 주로 사용할 것은 GenyMotion 입니다. Genymotion에 접속해서 가입 후 다운로드를 받습니다.</summary></entry><entry><title type="html">Recon and Scan</title><link href="http://localhost:4000/technique/powershell/2017/09/21/Recon_and_Scan.html" rel="alternate" type="text/html" title="Recon and Scan" /><published>2017-09-21T21:00:00+09:00</published><updated>2017-09-21T21:00:00+09:00</updated><id>http://localhost:4000/technique/powershell/2017/09/21/Recon_and_Scan</id><content type="html" xml:base="http://localhost:4000/technique/powershell/2017/09/21/Recon_and_Scan.html">&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;PowerShell을 이용해 모의해킹을 진행하는 방법에 대해서 알아보겠습니다.&lt;/p&gt;

&lt;p&gt;임의의 한 사이트에 대해 점검하고자 할 때 해당 서버가 정상적으로 작동하는지, 어떤 포트가 열려있는지에 대해서 알아보겠습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;허락받지 않은 곳에서 테스트를 할 경우에는 본인에게 책임이 있습니다.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;점검하기 위해서 여러가지 PowerShell Script를 사용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;nishang&quot;&gt;Nishang&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;http://github.com/samratashok/nishang&quot;&gt;여기&lt;/a&gt;에서 PowerShell Script를 받을 수 있습니다.&lt;/p&gt;

&lt;p&gt;해당 스크립트를 다운받고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Import-Module&lt;/code&gt;명령어를 이용해 nishang.psm1 을 불러옵니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\Users\k3y6reak\Desktop\PowerShell&amp;gt; ls


    디렉터리: C:\Users\k3y6reak\Desktop\PowerShell


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
d-----   2017. 9. 21.   오후 5:57                nishang-master
d-----   2017. 9. 21.   오후 5:57                Posh-SecMod-master
d-----   2017. 9. 21.   오후 5:57                PowerSploit-master
d-----   2017. 9. 21.   오후 5:57                PowerTools-master
-a----   2017. 9. 20.   오후 8:46        1762079 nishang-master.zip
-a----   2017. 9. 20.   오후 8:49        1542881 Posh-SecMod-master.zip
-a----   2017. 9. 20.   오후 8:47        1898185 PowerSploit-master.zip
-a----   2017. 9. 20.   오후 8:48       10422636 PowerTools-master.zip

PS C:\Users\k3y6reak\Desktop\PowerShell&amp;gt; Import-Module .\nishang-master\nishang.psm1
경고: 'nishang' 모듈에서 가져온 일부 명령 이름에 검색 가능성을 낮출 수 있는 승인되지 않은 동사가 포함되어 있습니다.
승인되지 않은 동사가 포함된 명령을 찾으려면 Verbose 매개 변수와 함께 Import-Module 명령을 다시 실행하십시오. 승인된
동사 목록을 보려면 Get-Verb를 입력하십시오.
경고: 가져온 일부 명령 이름에 다음과 같은 제한 문자가 하나 이상 들어 있습니다. # , ( )  [ ] &amp;amp; - / \ $ ^ ; : &quot; ' &amp;lt; | ? @ ` * % + = ~&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;위에서 본 결과처럼 nishang.psm1이 제대로 실행되지 않은 것을 볼 수 있습니다.&lt;/p&gt;

&lt;p&gt;이러한 경우 사용하고자하는 스크립트를 &lt;code class=&quot;highlighter-rouge&quot;&gt;Dot Sourcing&lt;/code&gt; 방법으로 사용할 수 있습니다.
Dot Sourcing에 대한 설명은 &lt;a href=&quot;https://k3y6reak.github.io/technique/powershell/2017/08/08/Functios.html&quot;&gt;여기&lt;/a&gt;를 참고해 주세요.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\Users\k3y6reak\Desktop\PowerShell&amp;gt; . .\nishang-master\Scan\Invoke-PortScan.ps1
PS C:\Users\k3y6reak\Desktop\PowerShell&amp;gt; Invoke-PortScan -StartAddress XXX.XXX.XXX.XXX -EndAddress XXX.XXX.XXX.XXX -ResolveHost

IPAddress       HostName            Ports
---------       --------            -----
XXX.XXX.XXX.XXX abcde.abcedf.ab.ab&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;StartAddress&lt;/code&gt;에 시작할 IP주소를 넣어주고 &lt;code class=&quot;highlighter-rouge&quot;&gt;EndAddress&lt;/code&gt;에 끝날 IP주소를 넣어주면 됩니다. 그러면 시작 IP부터 끝 IP까지 진행하면서 서버가 작동하는 IP 주소를 출력해 줍니다.&lt;/p&gt;

&lt;p&gt;또한 열려있는 포트를 찾고자 한다면 -ResolveHost 옵션 대신 &lt;code class=&quot;highlighter-rouge&quot;&gt;ScanPort&lt;/code&gt;옵션을 사용하면 됩니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\Users\k3y6reak\Desktop\PowerShell&amp;gt; Invoke-PortScan -StartAddress XXX.XXX.XXX.XXX -EndAddress XXX.XXX.XXX.XXX -ScanPort

IPAddress       HostName Ports
---------       -------- -----
XXX.XXX.XXX.XXX          {80, 443}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;powersploit&quot;&gt;PowerSploit&lt;/h4&gt;
&lt;p&gt;이번에는 다른 스크립트를 사용해 보겠습니다. &lt;a href=&quot;https://github.com/mattifestation/PowerSploit&quot;&gt;여기&lt;/a&gt;에서 PowerShell Script를 받을 수 있습니다.&lt;/p&gt;

&lt;p&gt;DotSourcing 방식으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Get-HttpStatus&lt;/code&gt; 스크립트를 가져옵니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\Users\k3y6reak\Desktop\PowerShell&amp;gt; . .\PowerSploit-master\Recon\Get-HttpStatus.ps1
PS C:\Users\k3y6reak\Desktop\PowerShell&amp;gt; Get-HttpStatus -Target XXX.XXX.XXX.XXX -Path .\PowerSploit-master\Recon\Dictionaries\generic.txt -Port 80 | Where-Object {$_.Status -match &quot;ok&quot;}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;테스트 하고자 하는 서버에서 일치하는 결과값이 없기 때문에 출력이 안되지만 결과가 존재한다면 취약점으로 작용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;이 외에도 PowerTools, Posh-SecMod 등 여러가지 스크립트들이 있습니다.&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Registry</title><link href="http://localhost:4000/technique/powershell/2017/09/08/Registry.html" rel="alternate" type="text/html" title="Registry" /><published>2017-09-08T14:56:00+09:00</published><updated>2017-09-08T14:56:00+09:00</updated><id>http://localhost:4000/technique/powershell/2017/09/08/Registry</id><content type="html" xml:base="http://localhost:4000/technique/powershell/2017/09/08/Registry.html">&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;PowerShell에서 레지스트리에 접근하고자 하는 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;Get-Item&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Get-ChildItem&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Get-ItemProperty&lt;/code&gt;를 사용할 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;get-item&quot;&gt;Get-Item&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\Users\k3y6reak&amp;gt; Get-Item 'HKLM:\Software\Microsoft\Windows NT\CurrentVersion'


    Hive: HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT


Name                           Property
----                           --------
CurrentVersion                 SystemRoot                : C:\WINDOWS
                               BuildBranch               : rs2_release
                               BuildGUID                 : ffffffff-ffff-ffff-ffff-ffffffffffff
                               BuildLab                  : 15063.rs2_release.170317-1834
                               BuildLabEx                : 15063.0.amd64fre.rs2_release.170317-1834
                               CompositionEditionID      : Education
                               CurrentBuild              : 15063
                               CurrentBuildNumber        : 15063
                               CurrentMajorVersionNumber : 10
                               CurrentMinorVersionNumber : 0
                               CurrentType               : Multiprocessor Free
                               CurrentVersion            : 6.3
                               EditionID                 : Education
                               EditionSubstring          :
                               InstallationType          : Client
                               InstallDate               : 1502094253
                               ProductName               : Windows 10 Education
                               ReleaseId                 : 1703
                               SoftwareType              : System
                               UBR                       : 540
                               PathName                  : C:\WINDOWS
                               ProductId                 : 
                               DigitalProductId          : 
                               DigitalProductId4         : 
                               RegisteredOrganization    :
                               RegisteredOwner           : k3y6reak
                               InstallTime               : 131465678534059230&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;get-itemproperty&quot;&gt;Get-ItemProperty&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\Users\k3y6reak&amp;gt; Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion'


SystemRoot                : C:\WINDOWS
BuildBranch               : rs2_release
BuildGUID                 : ffffffff-ffff-ffff-ffff-ffffffffffff
BuildLab                  : 15063.rs2_release.170317-1834
BuildLabEx                : 15063.0.amd64fre.rs2_release.170317-1834
CompositionEditionID      : Education
CurrentBuild              : 15063
CurrentBuildNumber        : 15063
CurrentMajorVersionNumber : 10
CurrentMinorVersionNumber : 0
CurrentType               : Multiprocessor Free
CurrentVersion            : 6.3
EditionID                 : Education
EditionSubstring          :
InstallationType          : Client
InstallDate               : 1502094253
ProductName               : Windows 10 Education
ReleaseId                 : 1703
SoftwareType              : System
UBR                       : 540
PathName                  : C:\WINDOWS
ProductId                 : 
DigitalProductId          : 
DigitalProductId4         : 
RegisteredOrganization    :
RegisteredOwner           : k3y6reak
InstallTime               : 131465678534059230
PSPath                    : Microsoft.PowerShell.Core\Registry::HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion
PSParentPath              : Microsoft.PowerShell.Core\Registry::HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT
PSChildName               : CurrentVersion
PSDrive                   : HKLM
PSProvider                : Microsoft.PowerShell.Core\Registry&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;get-childitem&quot;&gt;Get-ChildItem&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\Users\k3y6reak&amp;gt; Get-ChildItem 'HKLM:\software\microsoft\windows nt\CurrentVersion' -Recurse | more
Get-ChildItem : 요청한 레지스트리에 액세스할 수 없습니다.
위치 줄:1 문자:1
+ Get-ChildItem 'HKLM:\software\microsoft\windows nt\CurrentVersion' -R ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : PermissionDenied: (HKEY_LOCAL_MACH...lags\CIT\System:String) [Get-ChildItem], SecurityException
    + FullyQualifiedErrorId : System.Security.SecurityException,Microsoft.PowerShell.Commands.GetChildItemCommand


...(중략)


    Hive: HKEY_LOCAL_MACHINE\software\microsoft\windows nt\CurrentVersion


Name                           Property
----                           --------
Accessibility


    Hive: HKEY_LOCAL_MACHINE\software\microsoft\windows nt\CurrentVersion\Accessibility


Name                           Property
----                           --------
ATs


    Hive: HKEY_LOCAL_MACHINE\software\microsoft\windows nt\CurrentVersion\Accessibility\ATs


Name                           Property
----                           --------
animations                     Description   :
                               Profile       : &amp;lt;HCIModel&amp;gt;&amp;lt;Accommodation type=&quot;mild cognitive&quot; /&amp;gt;&amp;lt;Accommodation type=&quot;severe cognitive&quot; /&amp;gt;&amp;lt;Accommodation type=&quot;severe vision&quot; /&amp;gt;&amp;lt;Accommodation type=&quot;mild vision&quot;
                               /&amp;gt;&amp;lt;/HCIModel&amp;gt;
                               SimpleProfile : SystemSetting
                               StartExe      : 13
...(생략)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;추가적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Set-Location&lt;/code&gt;을 이용하여 레지스트리에 직접 접근할 수 있습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\Users\k3y6reak&amp;gt; Set-Location Registry::
PS Microsoft.PowerShell.Core\Registry::&amp;gt; ls


    Hive:


Name                           Property
----                           --------
HKEY_LOCAL_MACHINE
HKEY_CURRENT_USER
HKEY_CLASSES_ROOT
HKEY_CURRENT_CONFIG
HKEY_USERS
HKEY_PERFORMANCE_DATA          Global : {80, 0, 69, 0...}
                               Costly : {80, 0, 69, 0...}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이번에는 레지스트리를 수정하고 생성하는 방법을 알아 봅시다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;New-Item&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;New-ItemProperty&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Rename-Item&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Rename-ItemProperty&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Set-ItemProperty&lt;/code&gt;가 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;new-item&quot;&gt;New-Item&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\Users\k3y6reak&amp;gt; Get-PSProvider

Name                 Capabilities                                                                     Drives
----                 ------------                                                                     ------
Registry             ShouldProcess, Transactions                                                      {HKLM, HKCU}
Alias                ShouldProcess                                                                    {Alias}
Environment          ShouldProcess                                                                    {Env}
FileSystem           Filter, ShouldProcess, Credentials                                               {C, D, E, Y...}
Function             ShouldProcess                                                                    {Function}
Variable             ShouldProcess                                                                    {Variable}

PS C:\Users\k3y6reak&amp;gt; New-Item -Path HKCU:\k3y6reak


    Hive: HKEY_CURRENT_USER


Name                           Property
----                           --------
k3y6reak&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;위와 같이 스크립트를 실행하면 아래 그림 처럼 레지스트리를 등록할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/powershell/registry/registry.png&quot; alt=&quot;powershell_create_registry&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;new-itemproperty&quot;&gt;New-ItemProperty&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\Users\k3y6reak&amp;gt; New-ItemProperty -Path HKCU:\k3y6reak\ -Name Reg1 -PropertyType String -Value 2


Reg1         : 2
PSPath       : Microsoft.PowerShell.Core\Registry::HKEY_CURRENT_USER\k3y6reak\
PSParentPath : Microsoft.PowerShell.Core\Registry::HKEY_CURRENT_USER
PSChildName  : k3y6reak
PSDrive      : HKCU
PSProvider   : Microsoft.PowerShell.Core\Registry&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;위와 같이 해당 위치에 값 또한 설정할 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;rename-item&quot;&gt;Rename-Item&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\Users\k3y6reak&amp;gt; Rename-Item HKCU:\k3y6reak -newname k3y6reak2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;특정 레지스트리의 이름을 변경할 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;rename-itemproperty&quot;&gt;Rename-ItemProperty&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\Users\k3y6reak&amp;gt; Rename-ItemProperty HKCU:\k3y6reak2 -Name Reg1 -NewName Reg2&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;마찬가지로 특정 레지스트리의 값 또한 변경할 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;set-itemproperty&quot;&gt;Set-ItemProperty&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\Users\k3y6reak&amp;gt; Set-ItemProperty -Path HKCU:\k3y6reak2 -Name Reg2 -Value 4855&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">COM</title><link href="http://localhost:4000/technique/powershell/2017/09/06/COM.html" rel="alternate" type="text/html" title="COM" /><published>2017-09-06T19:14:00+09:00</published><updated>2017-09-06T19:14:00+09:00</updated><id>http://localhost:4000/technique/powershell/2017/09/06/COM</id><content type="html" xml:base="http://localhost:4000/technique/powershell/2017/09/06/COM.html">&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;COM&lt;/code&gt;은 Component Object Model로 &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8_%EC%98%A4%EB%B8%8C%EC%A0%9D%ED%8A%B8_%EB%AA%A8%EB%8D%B8&quot;&gt;위키백과&lt;/a&gt;를 참조하길 바란다.&lt;/p&gt;

&lt;p&gt;PowerShell에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;ComObject&lt;/code&gt;를 이용해 Registry에 접근할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Get-ChildItem REGISTRY::HKEY_CLASSES_ROOT\CLSID -include PROGID -recurse | ForEach {$_.GetValue(&quot;&quot;)}&lt;/code&gt;를 실행해 보자.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; Get-ChildItem REGISTRY::HKEY_CLASSES_ROOT\CLSID -include PROGID -recurse | ForEach {$_.GetValue(&quot;&quot;)}
file
StaticMetafile
StaticDib
clsid
objref
ADODB.Command.6.0
ADODB.Parameter.6.0
ADODB.Connection.6.0
ADODB.Recordset.6.0
...(생략)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;많은 결과가 출력되는데 이 중 &lt;code class=&quot;highlighter-rouge&quot;&gt;wscript&lt;/code&gt;만 출력해 보자. &lt;code class=&quot;highlighter-rouge&quot;&gt;| Where-Object {$_ -match &quot;wscript&quot;}&lt;/code&gt;를 붙여주면 된다. wscript는 윈도우에서 사용하는 스크립트다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; Get-ChildItem REGISTRY::HKEY_CLASSES_ROOT\CLSID -include PROGID -recurse | ForEach {$_.GetValue(&quot;&quot;)} | Where-Object {$_ -match &quot;wscript&quot;}
WScript.Network.1
WScript.Shell.1
WScript.Shell.1
WScript.Network.1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;여기서 WScript.Shell.1을 사용해보자.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$wscript = New-Object -ComObject Wscript.Shell.1&lt;/code&gt;을 입력한 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;$wscript | Get-Member&lt;/code&gt;을 입력해 보자.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; $wscript = New-Object -ComObject Wscript.Shell.1
PS C:\WINDOWS\system32&amp;gt; $wscript | Get-Member


   TypeName: System.__ComObject#{41904400-be18-11d3-a28b-00104bd35090}

Name                     MemberType            Definition
----                     ----------            ----------
AppActivate              Method                bool AppActivate (Variant, Variant)
CreateShortcut           Method                IDispatch CreateShortcut (string)
Exec                     Method                IWshExec Exec (string)
ExpandEnvironmentStrings Method                string ExpandEnvironmentStrings (string)
LogEvent                 Method                bool LogEvent (Variant, string, string)
Popup                    Method                int Popup (string, Variant, Variant, Variant)
RegDelete                Method                void RegDelete (string)
RegRead                  Method                Variant RegRead (string)
RegWrite                 Method                void RegWrite (string, Variant, Variant)
Run                      Method                int Run (string, Variant, Variant)
SendKeys                 Method                void SendKeys (string, Variant)
Environment              ParameterizedProperty IWshEnvironment Environment (Variant) {get}
CurrentDirectory         Property              string CurrentDirectory () {get} {set}
SpecialFolders           Property              IWshCollection SpecialFolders () {get}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;사용할 수 있는 Method들이 출력된 것을 볼 수 있다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; $wscript.CurrentDirectory
C:\WINDOWS\system32
PS C:\WINDOWS\system32&amp;gt; $wscript.Exec(&quot;notepad.exe&quot;)


Status    : 0
StdIn     : System.__ComObject
StdOut    : System.__ComObject
StdErr    : System.__ComObject
ProcessID : 8056
ExitCode  : 0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이렇게 사용할 수 있다.&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">WMI</title><link href="http://localhost:4000/technique/powershell/2017/09/04/WMI.html" rel="alternate" type="text/html" title="WMI" /><published>2017-09-04T20:01:00+09:00</published><updated>2017-09-04T20:01:00+09:00</updated><id>http://localhost:4000/technique/powershell/2017/09/04/WMI</id><content type="html" xml:base="http://localhost:4000/technique/powershell/2017/09/04/WMI.html">&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;WMI&lt;/code&gt;는 Windows Management Instrumentation으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;윈도우 관리 도구&lt;/code&gt;다. 이를 PowerShell에서 사용할 수 있는데 &lt;code class=&quot;highlighter-rouge&quot;&gt;Get-WmiObject&lt;/code&gt;명령을 이용한다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; Get-WmiObject -Namespace &quot;root&quot; -Class &quot;__Namespace&quot;


__GENUS          : 2
__CLASS          : __NAMESPACE
__SUPERCLASS     : __SystemClass
__DYNASTY        : __SystemClass
__RELPATH        : __NAMESPACE.Name=&quot;subscription&quot;
__PROPERTY_COUNT : 1
__DERIVATION     : {__SystemClass}
__SERVER         : K3Y6REAK9778
__NAMESPACE      : ROOT
__PATH           : \\K3Y6REAK9778\ROOT:__NAMESPACE.Name=&quot;subscription&quot;
Name             : subscription
PSComputerName   : K3Y6REAK9778

__GENUS          : 2
__CLASS          : __NAMESPACE
__SUPERCLASS     : __SystemClass
__DYNASTY        : __SystemClass
__RELPATH        : __NAMESPACE.Name=&quot;DEFAULT&quot;
__PROPERTY_COUNT : 1
__DERIVATION     : {__SystemClass}
__SERVER         : K3Y6REAK9778
__NAMESPACE      : ROOT
__PATH           : \\K3Y6REAK9778\ROOT:__NAMESPACE.Name=&quot;DEFAULT&quot;
Name             : DEFAULT
PSComputerName   : K3Y6REAK9778&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;여기서 이름에 대한 내용만 가져오고 싶은 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;| Select-Object Name&lt;/code&gt;를 붙여주면 된다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; Get-WmiObject -Namespace &quot;root&quot; -Class &quot;__Namespace&quot; | Select-Object Name

Name
----
subscription
DEFAULT
CIMV2
msdtc
Cli
SECURITY
SecurityCenter2
RSOP
PEH
StandardCimv2
WMI
directory
Policy
Interop
Hardware
ServiceModel
SecurityCenter
Microsoft
aspnet
Appv&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Wmi-Object 중에서 CIMV2에 대한 내용을 살펴보자.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Get-WmiObject -NameSpace &quot;root/cimv2&quot; -List&lt;/code&gt;를 입력하면 아래와 같은 수많은 항목을 볼 수 있다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; Get-WmiObject -NameSpace &quot;root/cimv2&quot; -List


   NameSpace: ROOT\CIMV2

Name                                Methods              Properties
----                                -------              ----------
__SystemClass                       {}                   {}
__thisNAMESPACE                     {}                   {SECURITY_DESCRIPTOR}
__Provider                          {}                   {Name}
__Win32Provider                     {}                   {ClientLoadableCLSID, CLSID, Concurrency, DefaultMachineName...}
__ProviderRegistration              {}                   {provider}
__EventProviderRegistration         {}                   {EventQueryList, provider}
__ObjectProviderRegistration        {}                   {InteractionType, provider, QuerySupportLevels, SupportsBatching...}
__ClassProviderRegistration         {}                   {CacheRefreshInterval, InteractionType, PerUserSchema, provider...}
__InstanceProviderRegistration      {}                   {InteractionType, provider, QuerySupportLevels, SupportsBatching...}

...(생략)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;여기서 Win32에 대한 항목을 보고 싶다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;| Where-Object {$_.Name -match &quot;Win32}&lt;/code&gt;를 붙여주면 된다. 마찬가지로 많은 항목이 출력된다. 이 중 Win32_Process을 사용해 보자.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Get-WmiObject -Class Win32_Process&lt;/code&gt;를 실행하면 이 또한 많은 항목이 출력된다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;__GENUS                    : 2
__CLASS                    : Win32_Process
__SUPERCLASS               : CIM_Process
__DYNASTY                  : CIM_ManagedSystemElement
__RELPATH                  : Win32_Process.Handle=&quot;604&quot;
__PROPERTY_COUNT           : 45
__DERIVATION               : {CIM_Process, CIM_LogicalElement, CIM_ManagedSystemElement}
__SERVER                   : K3Y6REAK9778
__NAMESPACE                : root\cimv2
__PATH                     : \\K3Y6REAK9778\root\cimv2:Win32_Process.Handle=&quot;604&quot;
Caption                    : wininit.exe
CommandLine                :
CreationClassName          : Win32_Process
CreationDate               : 20170813174441.546153+540
CSCreationClassName        : Win32_ComputerSystem
CSName                     : K3Y6REAK9778
Description                : wininit.exe
ExecutablePath             :
ExecutionState             :
Handle                     : 604
HandleCount                : 152
InstallDate                :
KernelModeTime             : 12343750
MaximumWorkingSetSize      :
MinimumWorkingSetSize      :
Name                       : wininit.exe
OSCreationClassName        : Win32_OperatingSystem
OSName                     : Microsoft Windows 10 Education|C:\WINDOWS|\Device\Harddisk0\Partition4
OtherOperationCount        : 17201
OtherTransferCount         : 4702606
PageFaults                 : 6127
PageFileUsage              : 1704
ParentProcessId            : 500
PeakPageFileUsage          : 2200
PeakVirtualSize            : 2199082618880
PeakWorkingSetSize         : 7188
Priority                   : 13
PrivatePageCount           : 1744896
ProcessId                  : 604
QuotaNonPagedPoolUsage     : 12
QuotaPagedPoolUsage        : 120
QuotaPeakNonPagedPoolUsage : 15
QuotaPeakPagedPoolUsage    : 122
ReadOperationCount         : 22
ReadTransferCount          : 56320
SessionId                  : 0
Status                     :
TerminationDate            :
ThreadCount                : 1
UserModeTime               : 0
VirtualSize                : 2199078547456
WindowsVersion             : 10.0.15063
WorkingSetSize             : 4096
WriteOperationCount        : 0
WriteTransferCount         : 0
PSComputerName             : K3Y6REAK9778
ProcessName                : wininit.exe
Handles                    : 152
VM                         : 2199078547456
WS                         : 4096
Path                       :&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이름만 출력하고 싶다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;| select Name&lt;/code&gt;을 붙여주면 된다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; Get-WmiObject -Class Win32_Process | Select Name

Name
----
System Idle Process
System
smss.exe
csrss.exe
wininit.exe
services.exe
lsass.exe
svchost.exe
svchost.exe
fontdrvhost.exe
svchost.exe
svchost.exe
svchost.exe
svchost.exe
WUDFHost.exe
...(생략)&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이 명령어을 이용해서 Win7의 정보를 가져올 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Get-WmiObject -Class Win32_Process -ComputerName [Win7 컴퓨터이름] -Credential [Win7 계정] | select Name&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; Get-WmiObject -Class Win32_Process -ComputerName WIN-J9KO348JQVU -Credential k3y6reak | select Name

Name
----
System Idle Process
System
smss.exe
csrss.exe
wininit.exe
csrss.exe
winlogon.exe
services.exe
lsass.exe
lsm.exe
svchost.exe
vmacthlp.exe
svchost.exe
svchost.exe
svchost.exe
svchost.exe
audiodg.exe
svchost.exe
svchost.exe
spoolsv.exe
svchost.exe
VGAuthService.exe
vmtoolsd.exe
svchost.exe
dllhost.exe
dllhost.exe
WmiPrvSE.exe
msdtc.exe
taskhost.exe
dwm.exe
explorer.exe
vmtoolsd.exe
VSSVC.exe
SearchIndexer.exe
wmpnetwk.exe
svchost.exe
SearchProtocolHost.exe
SearchFilterHost.exe
WmiPrvSE.exe
WmiApSrv.exe
powershell.exe
conhost.exe
sppsvc.exe
svchost.exe&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;여러 프로세스 중 특정 한 프로세스만 출력하고 싶은 경우 여러가지 방법이 있다.&lt;/p&gt;

&lt;h4 id=&quot;-eq&quot;&gt;-eq&lt;/h4&gt;

&lt;p&gt;eq는 equal로 같은 문자열이 있는 것을 찾는다. 
&lt;code class=&quot;highlighter-rouge&quot;&gt;Get-WmiObject -Class Win32_Process | Where-Object {$_.Name -eq &quot;powershell.exe&quot;}&lt;/code&gt;를 이용해 powershell.exe를 찾게된다.&lt;/p&gt;

&lt;h4 id=&quot;-filter&quot;&gt;-Filter&lt;/h4&gt;

&lt;p&gt;필터 또한 찾고자 하는 문자열을 찾아주는 기능을 한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Get-WmiObject -Class Win32_Process -Filter {Name = &quot;powershell.exe&quot;}&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;-query&quot;&gt;-Query&lt;/h4&gt;

&lt;p&gt;쿼리는 쿼리문을 이용하여 찾는 방법을 말한다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Get-WmiObject -Query {Select * from Win32_Process where name = &quot;powershell.exe&quot;}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;eq, filter, query&lt;/code&gt; 모두 동일한 결과를 출력한다.&lt;/p&gt;

&lt;p&gt;WMI을 이용해서 프로세스를 실행시킬 수 있다. 먼저 Win32_Process에서 사용할 수 있는 Method를 살펴보자.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Get-WmiObject -Class Win32_Process -List&lt;/code&gt;를 입력한다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; Get-WmiObject -Class Win32_Process -List


   NameSpace: ROOT\cimv2

Name                                Methods              Properties
----                                -------              ----------
Win32_Process                       {Create, Terminat... {Caption, CommandLine, CreationClassName, CreationDate...}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Methods 항목에 Create, Termiat… 를 볼 수 있는데 사용할 수 있는 Method를 모두 보자.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Get-WmiObject -Class Win32_Process -List | Select-Object -ExpandProterty Methods&lt;/code&gt;를 입력해 보자.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; Get-WmiObject -Class Win32_Process -List | Select-Object -ExpandProperty Methods


Name          : Create
InParameters  : System.Management.ManagementBaseObject
OutParameters : System.Management.ManagementBaseObject
Origin        : Win32_Process
Qualifiers    : {Constructor, Implemented, MappingStrings, Privileges...}

Name          : Terminate
InParameters  : System.Management.ManagementBaseObject
OutParameters : System.Management.ManagementBaseObject
Origin        : Win32_Process
Qualifiers    : {Destructor, Implemented, MappingStrings, Privileges...}

Name          : GetOwner
InParameters  :
OutParameters : System.Management.ManagementBaseObject
Origin        : Win32_Process
Qualifiers    : {Implemented, MappingStrings, ValueMap}

Name          : GetOwnerSid
InParameters  :
OutParameters : System.Management.ManagementBaseObject
Origin        : Win32_Process
Qualifiers    : {Implemented, MappingStrings, ValueMap}

Name          : SetPriority
InParameters  : System.Management.ManagementBaseObject
OutParameters : System.Management.ManagementBaseObject
Origin        : Win32_Process
Qualifiers    : {Implemented, MappingStrings, ValueMap}

Name          : AttachDebugger
InParameters  :
OutParameters : System.Management.ManagementBaseObject
Origin        : Win32_Process
Qualifiers    : {Implemented, ValueMap}

Name          : GetAvailableVirtualSize
InParameters  :
OutParameters : System.Management.ManagementBaseObject
Origin        : Win32_Process
Qualifiers    : {Implemented, ValueMap}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;위 출력결과를 보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Create, Terminate, GetOwner, GetOwnerSid, SetPriority, AttachDebugger, GetAvailableVirtualSize&lt;/code&gt;를 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Invoke-WmiMethod&lt;/code&gt; 명령어를 통해서 notepad.exe를 실행해보자.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Invoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList &quot;notepad.exe&quot;&lt;/code&gt;를 입력해 보자.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; Invoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList &quot;notepad.exe&quot;


__GENUS          : 2
__CLASS          : __PARAMETERS
__SUPERCLASS     :
__DYNASTY        : __PARAMETERS
__RELPATH        :
__PROPERTY_COUNT : 2
__DERIVATION     : {}
__SERVER         :
__NAMESPACE      :
__PATH           :
ProcessId        : 2940
ReturnValue      : 0
PSComputerName   :&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Invoke-WmiMethod&lt;/code&gt; 또한 Win7에 notepad.exe를 실행할 수 있다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; Invoke-WmiMethod -Class Win32_Process -Name Create -ArgumentList &quot;notepad.exe&quot; -ComputerName WIN-J9KO348JQVU -Credential k3y6reak


__GENUS          : 2
__CLASS          : __PARAMETERS
__SUPERCLASS     :
__DYNASTY        : __PARAMETERS
__RELPATH        :
__PROPERTY_COUNT : 2
__DERIVATION     : {}
__SERVER         :
__NAMESPACE      :
__PATH           :
ProcessId        : 2420
ReturnValue      : 0
PSComputerName   :&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;실행 결과를 보면 실행이 된 것을 볼 수 있는데 실제 Win7에서 확인해보면 실행되지 않는다.&lt;/p&gt;

&lt;p&gt;실행시킬 수 있는 방법에 대해서 알아봐야겠다.&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Jobs</title><link href="http://localhost:4000/technique/powershell/2017/09/01/jobs.html" rel="alternate" type="text/html" title="Jobs" /><published>2017-09-01T10:34:00+09:00</published><updated>2017-09-01T10:34:00+09:00</updated><id>http://localhost:4000/technique/powershell/2017/09/01/jobs</id><content type="html" xml:base="http://localhost:4000/technique/powershell/2017/09/01/jobs.html">&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;job&lt;/code&gt;은 PowerShell에서 사용되는 것으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Background&lt;/code&gt;로 실행하는 것을 말합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\Users\k3y6reak\Desktop&amp;gt; Help *job*






Remove-Job                        Cmdlet    Microsoft.PowerShell.Core Deletes a Windows PowerShell background job.
Start-Job                         Cmdlet    Microsoft.PowerShell.Core Starts a Windows PowerShell background job.
Stop-Job                          Cmdlet    Microsoft.PowerShell.Core Stops a Windows PowerShell background job.
Wait-Job                          Cmdlet    Microsoft.PowerShell.Core Suppresses the command prompt until one or all of the Windows PowerShell background jobs running in the session are completed.
Resume-Job                        Cmdlet    Microsoft.PowerShell.Core Restarts a suspended job.
Suspend-Job                       Cmdlet    Microsoft.PowerShell.Core Temporarily stops workflow jobs.
Add-JobTrigger                    Cmdlet    PSScheduledJob            Adds job triggers to scheduled jobs.
Disable-JobTrigger                Cmdlet    PSScheduledJob            Disables the job triggers of scheduled jobs.
Disable-ScheduledJob              Cmdlet    PSScheduledJob            Disables a scheduled job.
Enable-JobTrigger                 Cmdlet    PSScheduledJob            Enables the job triggers of scheduled jobs.
Enable-ScheduledJob               Cmdlet    PSScheduledJob            Enables a scheduled job.
Get-JobTrigger                    Cmdlet    PSScheduledJob            Gets the job triggers of scheduled jobs.
Get-ScheduledJob                  Cmdlet    PSScheduledJob            Gets scheduled jobs on the local computer.
Get-ScheduledJobOption            Cmdlet    PSScheduledJob            Gets the job options of scheduled jobs.
New-JobTrigger                    Cmdlet    PSScheduledJob            Creates a job trigger for a scheduled job.
New-ScheduledJobOption            Cmdlet    PSScheduledJob            Creates an object that contains advanced options for a scheduled job.
Register-ScheduledJob             Cmdlet    PSScheduledJob            Creates a scheduled job.
Remove-JobTrigger                 Cmdlet    PSScheduledJob            Delete job triggers from scheduled jobs.
Set-JobTrigger                    Cmdlet    PSScheduledJob            Changes the job trigger of a scheduled job.
Set-ScheduledJob                  Cmdlet    PSScheduledJob            Changes scheduled jobs.
Set-ScheduledJobOption            Cmdlet    PSScheduledJob            Changes the job options of a scheduled job.
Unregister-ScheduledJob           Cmdlet    PSScheduledJob            Deletes scheduled jobs on the local computer.
Resume-PrintJob                   Function  PrintManagement           ...
Suspend-PrintJob                  Function  PrintManagement           ...
Restart-PrintJob                  Function  PrintManagement           ...
Get-PrintJob                      Function  PrintManagement           ...
Remove-PrintJob                   Function  PrintManagement           ...
Stop-StorageJob                   Function  Storage                   ...
Get-StorageJob                    Function  Storage                   ...
about_Jobs                        HelpFile                            Provides information about how Windows PowerShell background jobs run a
about_Job_Details                 HelpFile                            Provides details about background jobs on local and remote computers.
about_Remote_Jobs                 HelpFile                            Describes how to run background jobs on remote computers.
about_Scheduled_Jobs              HelpFile                            Describes scheduled jobs and explains how to use and manage
about_Scheduled_Jobs_Advanced     HelpFile                            Explains advanced scheduled job topics, including the file structure
about_Scheduled_Jobs_Basics       HelpFile                            Explains how to create and manage scheduled jobs.
about_Scheduled_Jobs_Troublesh... HelpFile                            Explains how to resolve problems with scheduled jobs
about_Scheduled_Jobs              HelpFile                            Describes scheduled jobs and explains how to use and manage
about_Scheduled_Jobs_Advanced     HelpFile                            Explains advanced scheduled job topics, including the file structure
about_Scheduled_Jobs_Basics       HelpFile                            Explains how to create and manage scheduled jobs.
about_Scheduled_Jobs_Troublesh... HelpFile                            Explains how to resolve problems with scheduled jobs&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Job&lt;/code&gt;에 관한 내용을 찾아보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Start-Job&lt;/code&gt; 명령어가 있는데 이 명령어를 통해서 실행할 수 있습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; Start-Job -ScriptBlock {whoami}

Id     Name            PSJobTypeName   State         HasMoreData     Location             Command
--     ----            -------------   -----         -----------     --------             -------
1      Job1            BackgroundJob   Running       True            localhost            whoami&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Background&lt;/code&gt; 상태로 &lt;code class=&quot;highlighter-rouge&quot;&gt;whoami&lt;/code&gt;명령이 실행된 것을 볼 수 있습니다. 해당 명령의 실행결과를 출력하고자 할 때는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Receive-Job&lt;/code&gt;을 이용하면 됩니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; Get-Job -Id 1 | Receive-Job
k3y6reak9778\k3y6reak&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이번에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Windows7&lt;/code&gt;에서 Job을 실행시킨 후 해당 결과를 출력해 보도록 하겠습니다.
&lt;code class=&quot;highlighter-rouge&quot;&gt;$se&lt;/code&gt;라는 변수를 이용하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;PSSession&lt;/code&gt;을 이용해야 합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$se = New-PSSession -ComputerName [Windows7 컴퓨터 이름] -Credential [Windows7 계정]&lt;/code&gt;을 입력합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; $se = New-PSSession -ComputerName WIN-J9KO348JQVU -Credential k3y6reak
PS C:\WINDOWS\system32&amp;gt; Invoke-Command -ScriptBlock {Start-Job -ScriptBlock {ps}} -Session $se

Id     Name            PSJobTypeName   State         HasMoreData     Location             Command                   PSComputerName
--     ----            -------------   -----         -----------     --------             -------                   --------------
1      Job1                            Running       True            localhost            ps                        WIN-J9KO348JQVU&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Invoke-Command -ScriptBlock { Get-Job | Receive-Job } -Session $se&lt;/code&gt;를 입력하면 Windows7에서 실행되는 프로세스의 목록을 가져올 수 있습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; Invoke-Command -ScriptBlock { Get-Job | Receive-Job } -Session $se

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName                                                                 PSComputerName
-------  ------    -----      -----     ------     --  -- -----------                                                                 --------------
     30       2      660       2256      0.000   3488     conhost                                                                     WIN-J9KO348JQVU
    538       6     1264       4224      6.552    332     csrss                                                                       WIN-J9KO348JQVU
    204       7     9900       7844     22.558    396     csrss                                                                       WIN-J9KO348JQVU
    188       8     2928       8648     11.560   1908     dllhost                                                                     WIN-J9KO348JQVU
    116       6    36584      35968  8,268.271   2208     dwm                                                                         WIN-J9KO348JQVU
    807      28    32868      59380     62.166   2240     explorer                                                                    WIN-J9KO348JQVU
      0       0        0         24                 0     Idle                                                                        WIN-J9KO348JQVU
    622      10     2988       8188      5.257    500     lsass                                                                       WIN-J9KO348JQVU
    139       4     1216       3020      0.281    508     lsm                                                                         WIN-J9KO348JQVU
    143       9     2440       6252      0.265   2016     msdtc                                                                       WIN-J9KO348JQVU
    253      11    22232      32532      1.856   2748     powershell                                                                  WIN-J9KO348JQVU
    602      16    22056      25588      6.614   2536     SearchIndexer                                                               WIN-J9KO348JQVU
    208       7     3804       6736      9.656    492     services                                                                    WIN-J9KO348JQVU
     29       1      220        736      0.343    256     smss                                                                        WIN-J9KO348JQVU
    323      12     5056      11128      0.499   1256     spoolsv                                                                     WIN-J9KO348JQVU
    150       4     4228       8000     11.060   3240     sppsvc                                                                      WIN-J9KO348JQVU
    353       7     2688       7004      2.371    600     svchost                                                                     WIN-J9KO348JQVU
    265       9     2684       6100      1.654    700     svchost                                                                     WIN-J9KO348JQVU
    528      14    14144      14924      9.656    748     svchost                                                                     WIN-J9KO348JQVU
    343       9     2932       8364      2.293    848     svchost                                                                     WIN-J9KO348JQVU
    972      26    13888      25536     47.284    892     svchost                                                                     WIN-J9KO348JQVU
    814      19     7412      14292     16.505   1036     svchost                                                                     WIN-J9KO348JQVU
    454      18     9064      12392     23.369   1160     svchost                                                                     WIN-J9KO348JQVU
    304      25     8100       9572      2.418   1292     svchost                                                                     WIN-J9KO348JQVU
     97       7     1196       4272      0.187   1808     svchost                                                                     WIN-J9KO348JQVU
    285      13     4120       8752      7.301   2752     svchost                                                                     WIN-J9KO348JQVU
    348      35   145304      38772     20.967   3276     svchost                                                                     WIN-J9KO348JQVU
    525       0       44       1000                 4     System                                                                      WIN-J9KO348JQVU
    200      10     6784       7512      0.686   2152     taskhost                                                                    WIN-J9KO348JQVU
     85       5     4960       8936      0.250   1440     VGAuthService                                                               WIN-J9KO348JQVU
     53       3      816       3232      0.078    660     vmacthlp                                                                    WIN-J9KO348JQVU
    288      12     9316      16732    837.429   1492     vmtoolsd                                                                    WIN-J9KO348JQVU
    175       9     6904      15524    220.117   2340     vmtoolsd                                                                    WIN-J9KO348JQVU
     78       5      984       3764      0.359    384     wininit                                                                     WIN-J9KO348JQVU
    115       4     1656       5116      0.671    432     winlogon                                                                    WIN-J9KO348JQVU
    202       7     7184      11924     24.383    376     WmiPrvSE                                                                    WIN-J9KO348JQVU
    238       8     3636       4360     14.134   2624     wmpnetwk                                                                    WIN-J9KO348JQVU
    266      12    21748      31724      0.530   1144     wsmprovhost                                                                 WIN-J9KO348JQVU&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Remote</title><link href="http://localhost:4000/technique/powershell/2017/08/31/remote.html" rel="alternate" type="text/html" title="Remote" /><published>2017-08-31T17:32:00+09:00</published><updated>2017-08-31T17:32:00+09:00</updated><id>http://localhost:4000/technique/powershell/2017/08/31/remote</id><content type="html" xml:base="http://localhost:4000/technique/powershell/2017/08/31/remote.html">&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;PowerShell을 이용해서 다른 컴퓨터의 정보를 가져올 수 있습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;Get-Help *remote*&lt;/code&gt;를 입력합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; Get-Help *remote*

Name                              Category  Module                    Synopsis
----                              --------  ------                    --------
Enable-VMRemoteFXPhysicalVideo... Cmdlet    Hyper-V                   Enable-VMRemoteFXPhysicalVideoAdapter...
Add-VMRemoteFx3dVideoAdapter      Cmdlet    Hyper-V                   Add-VMRemoteFx3dVideoAdapter...
Remove-VMRemoteFx3dVideoAdapter   Cmdlet    Hyper-V                   Remove-VMRemoteFx3dVideoAdapter...
Set-VMRemoteFx3dVideoAdapter      Cmdlet    Hyper-V                   Set-VMRemoteFx3dVideoAdapter...
Get-VMRemoteFXPhysicalVideoAda... Cmdlet    Hyper-V                   Get-VMRemoteFXPhysicalVideoAdapter...
Disable-VMRemoteFXPhysicalVide... Cmdlet    Hyper-V                   Disable-VMRemoteFXPhysicalVideoAdapter...
Get-VMRemoteFx3dVideoAdapter      Cmdlet    Hyper-V                   Get-VMRemoteFx3dVideoAdapter...
about_Remote                      HelpFile                            Describes how to run remote commands in Windows PowerShell.
about_Remote_Disconnected_Sess... HelpFile                            Explains how to disconnect from and reconnect to a PSSession
about_Remote_FAQ                  HelpFile                            Contains questions and answers about running remote commands
about_Remote_Jobs                 HelpFile                            Describes how to run background jobs on remote computers.
about_Remote_Output               HelpFile                            Describes how to interpret and format the output of remote commands.
about_Remote_Requirements         HelpFile                            Describes the system requirements and configuration requirements for
about_Remote_Troubleshooting      HelpFile                            Describes how to troubleshoot remote operations in Windows PowerShell.
about_Remote_Variables            HelpFile                            Explains how to use local and remote variables in remote&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;cmdlet에서 인자 값으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;computername&lt;/code&gt;을 사용하는 명령어를 찾아봅시다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; Get-Command -CommandType cmdlet -ParameterName Computername

CommandType     Name                                               Version    Source
-----------     ----                                               -------    ------
Cmdlet          Add-Computer                                       3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Clear-EventLog                                     3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Connect-PSSession                                  3.0.0.0    Microsoft.PowerShell.Core
Cmdlet          Connect-WSMan                                      3.0.0.0    Microsoft.WSMan.Management
Cmdlet          Disconnect-WSMan                                   3.0.0.0    Microsoft.WSMan.Management
Cmdlet          Enter-PSSession                                    3.0.0.0    Microsoft.PowerShell.Core
Cmdlet          Get-EventLog                                       3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Get-HotFix                                         3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Get-Process                                        3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Get-PSSession                                      3.0.0.0    Microsoft.PowerShell.Core
Cmdlet          Get-Service                                        3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Get-WmiObject                                      3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Get-WSManInstance                                  3.0.0.0    Microsoft.WSMan.Management
Cmdlet          Invoke-Command                                     3.0.0.0    Microsoft.PowerShell.Core
Cmdlet          Invoke-WmiMethod                                   3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Invoke-WSManAction                                 3.0.0.0    Microsoft.WSMan.Management
Cmdlet          Limit-EventLog                                     3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          New-EventLog                                       3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          New-PSSession                                      3.0.0.0    Microsoft.PowerShell.Core
Cmdlet          New-WSManInstance                                  3.0.0.0    Microsoft.WSMan.Management
Cmdlet          Receive-Job                                        3.0.0.0    Microsoft.PowerShell.Core
Cmdlet          Receive-PSSession                                  3.0.0.0    Microsoft.PowerShell.Core
Cmdlet          Register-WmiEvent                                  3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Remove-Computer                                    3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Remove-EventLog                                    3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Remove-PSSession                                   3.0.0.0    Microsoft.PowerShell.Core
Cmdlet          Remove-WmiObject                                   3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Remove-WSManInstance                               3.0.0.0    Microsoft.WSMan.Management
Cmdlet          Rename-Computer                                    3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Restart-Computer                                   3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Send-MailMessage                                   3.1.0.0    Microsoft.PowerShell.Utility
Cmdlet          Set-Service                                        3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Set-WmiInstance                                    3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Set-WSManInstance                                  3.0.0.0    Microsoft.WSMan.Management
Cmdlet          Show-EventLog                                      3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Stop-Computer                                      3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Test-Connection                                    3.1.0.0    Microsoft.PowerShell.Management
Cmdlet          Test-WSMan                                         3.0.0.0    Microsoft.WSMan.Management
Cmdlet          Write-EventLog                                     3.1.0.0    Microsoft.PowerShell.Management&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;여기서 현재 컴퓨터의 HotFix 내용을 알고 싶다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Get-HotFix&lt;/code&gt;를 입력하면 결과가 나타납니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; Get-HotFix

Source        Description      HotFixID      InstalledBy          InstalledOn
------        -----------      --------      -----------          -----------
K3Y6REAK9778  Update           KB4022405     NT AUTHORITY\SYSTEM  2017. 8. 7. 오전 12:00:00
K3Y6REAK9778  Security Update  KB4034662     NT AUTHORITY\SYSTEM  2017. 8. 9. 오전 12:00:00
K3Y6REAK9778  Security Update  KB4034674     NT AUTHORITY\SYSTEM  2017. 8. 13. 오전 12:0...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;windows 7&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;windows 10&lt;/code&gt;의 HotFix 내용을 가져와 출력하는 방법을 알아보겠습니다.&lt;/p&gt;

&lt;p&gt;먼저 &lt;code class=&quot;highlighter-rouge&quot;&gt;windows 10&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Get-HotFix&lt;/code&gt;를 하면 아래와 같이 출력됩니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;* Windows 10 *
Source        Description      HotFixID      InstalledBy          InstalledOn
------        -----------      --------      -----------          -----------
K3Y6REAK9778  Update           KB4022405     NT AUTHORITY\SYSTEM  2017. 8. 7. 오전 12:00:00
K3Y6REAK9778  Security Update  KB4034662     NT AUTHORITY\SYSTEM  2017. 8. 9. 오전 12:00:00
K3Y6REAK9778  Security Update  KB4034674     NT AUTHORITY\SYSTEM  2017. 8. 13. 오전 12:0...&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;그리고 다른 컴퓨터에서 원격으로 가져오는 것이기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;관리자 권한&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Set-Item WSMAN:\localhost\client\trustedhosts -Value *&lt;/code&gt;를 입력한 뒤 명령을 실행합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; Set-Item WSMAN:\localhost\client\trustedhosts -Value *

WinRM 보안 구성
이 명령에서 WinRM 클라이언트에 대한 TrustedHosts 목록을 수정합니다. TrustedHosts 목록에 있는 컴퓨터가 인증되지 않을 수 있으며 클라이언트에서 자격 증명 정보를 이러한 컴퓨터에 보낼 수도 있습니다. 이 목록을
수정하시겠습니까?
[Y] 예(Y)  [N] 아니요(N)  [S] 일시 중단(S)  [?] 도움말 (기본값은 &quot;Y&quot;): Y&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;windows 7&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Get-HotFix -Computername [Windows 10 Computer 이름] -Credential [Windows 10 계정]&lt;/code&gt;를 입력해 줍니다. 그러면 &lt;code class=&quot;highlighter-rouge&quot;&gt;자격 증명 요청&lt;/code&gt;이 나오면 해당 명령어를 실행하는 계정의 비밀번호를 입력합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;* Windows 7 *
PS C:\Users\k3y6reak&amp;gt; Get-HotFix -Computername [Windows 10 Computer 이름] -Credential [Windows 10 계정]

Source        Description      HotFixID      InstalledBy          InstalledOn
------        -----------      --------      -----------          -----------
K3Y6REAK9778  Update           KB4022405     NT AUTHORITY\SYSTEM  2017-08-07 오전 12:00:00
K3Y6REAK9778  Security Update  KB4034662     NT AUTHORITY\SYSTEM  2017-08-09 오전 12:00:00
K3Y6REAK9778  Security Update  KB4034674     NT AUTHORITY\SYSTEM  2017-08-13 오전 12:00:00&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;반대로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Windows 10&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Windows 7&lt;/code&gt;의 실행되고 있는 프로세스 목록을 가져오도록 하겠습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Invoke-Command -ScriptBlock {Get-Process} -ComputerName [Windows 7 Computer 이름] -Credential [Windows 7 계정]&lt;/code&gt;를 입력합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;* Windows 10 *
PS C:\WINDOWS\system32&amp;gt; Invoke-Command -ScriptBlock {$env:computername} -ComputerName WIN-J9KO348JQVU -Credential k3y6reak
[WIN-J9KO348JQVU] 다음 오류 때문에 원격 서버 WIN-J9KO348JQVU에 연결하지 못했습니다. 클라이언트가 요청에 지정된 대상에 연결할 수 없습니다. 대상에서 서비스가 실행되고 요청을 수락하고 있는지 확인하십시오. 대상에서
 실행 중인 WS-Management 서비스에 대한 로그 및 설명서를 참조하십시오. 대부분의 경우 IIS 또는 WinRM입니다. 대상이 WinRM 서비스인 경우 대상에서 &quot;winrm quickconfig&quot; 명령을 사용하여 WinRM 서비스를 분석하고 구성하십
시오. 자세한 내용은 about_Remote_Troubleshooting 도움말 항목을 참조하십시오.
    + CategoryInfo          : OpenError: (WIN-J9KO348JQVU:String) [], PSRemotingTransportException
    + FullyQualifiedErrorId : CannotConnect,PSSessionStateBroken&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;위와 같은 에러 메시지가 출력된다면 Windows 7에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;관리자 권한&lt;/code&gt;으로 PowerShell을 실행시킨 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;Enable-PSRemoting -force&lt;/code&gt;를 입력합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;* Windows 7 *
PS C:\Windows\system32&amp;gt; Enable-PSRemoting -force
이 컴퓨터에서 요청을 수신하도록 WinRM이 이미 설정되었습니다.
원격 관리를 위한 WinRM이 업데이트되었습니다.
이 컴퓨터에서 모든 IP 주소로 WS-Man 요청을 수락하려면 HTTP://*에서 WinRM 수신기를 만드십시오.
WinRM 방화벽 예외를 사용합니다.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;그 후 다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;Invoke-Command -ScriptBlock {Get-Process} -ComputerName WIN-J9KO348JQVU -Credential k3y6reak&lt;/code&gt;를 입력합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;* Windows 10 *
PS C:\WINDOWS\system32&amp;gt; Invoke-Command -ScriptBlock {Get-Process} -ComputerName [Windows 7 Computer 이름] -Credential [Windows 7 계정]

Handles  NPM(K)    PM(K)      WS(K)     CPU(s)     Id  SI ProcessName                                                                  PSComputerName
-------  ------    -----      -----     ------     --  -- -----------                                                                  --------------
    126       5    14996      13952              2504     audiodg                                                                      WIN-J9KO348JQVU
     89       5     4328      10484      0.530   1572     conhost                                                                      WIN-J9KO348JQVU
     89       5     4292      10356      0.047   3980     conhost                                                                      WIN-J9KO348JQVU
    579       6     1288       3012      1.076    360     csrss                                                                        WIN-J9KO348JQVU
    257       8     9716       7684     11.934   3336     csrss                                                                        WIN-J9KO348JQVU
     83       4      912       3624      0.031   1916     dllhost                                                                      WIN-J9KO348JQVU
    188       8     3076       9080      0.031   3128     dllhost                                                                      WIN-J9KO348JQVU
    116       6    42392      49896      1.404   3608     dwm                                                                          WIN-J9KO348JQVU
    840      27    30936      61676     13.416   3620     explorer                                                                     WIN-J9KO348JQVU
      0       0        0         24                 0     Idle                                                                         WIN-J9KO348JQVU
    881      10     2952       6820      3.697    508     lsass                                                                        WIN-J9KO348JQVU
    144       4     1264       2112      0.000    516     lsm                                                                          WIN-J9KO348JQVU
    146       9     2400       3392      1.170   2188     msdtc                                                                        WIN-J9KO348JQVU
    688      50    33608      43892      0.780    492     powershell                                                                   WIN-J9KO348JQVU
    600      15    27680      46684      0.905    856     powershell                                                                   WIN-J9KO348JQVU
    764      18    22384      23768      4.711   1864     SearchIndexer                                                                WIN-J9KO348JQVU
    212       7     3792       6352      2.558    500     services                                                                     WIN-J9KO348JQVU
     29       1      220        528      0.156    280     smss                                                                         WIN-J9KO348JQVU
    325      12     5036       5032      0.936   1408     spoolsv                                                                      WIN-J9KO348JQVU
    152       4     6100       7480      2.933   3152     sppsvc                                                                       WIN-J9KO348JQVU
    100       7     1192       4244      0.062    352     svchost                                                                      WIN-J9KO348JQVU
    371       7     3252       6096     14.539    652     svchost                                                                      WIN-J9KO348JQVU
    298       9     2968       5904      0.733    744     svchost                                                                      WIN-J9KO348JQVU
    536      14    14200      12192      1.872    796     svchost                                                                      WIN-J9KO348JQVU
    364      10     3232       5308      7.457    916     svchost                                                                      WIN-J9KO348JQVU
   1206      31    21624      32616     45.318    960     svchost                                                                      WIN-J9KO348JQVU
    820      21     6752      12672      1.248   1104     svchost                                                                      WIN-J9KO348JQVU
    658      75    57968      33608      4.524   1176     svchost                                                                      WIN-J9KO348JQVU
    333      25     9308       8308      0.920   1468     svchost                                                                      WIN-J9KO348JQVU
    280      13     3908       7924      0.312   3064     svchost                                                                      WIN-J9KO348JQVU
    368      35   149724      58524    181.273   3188     svchost                                                                      WIN-J9KO348JQVU
    541       0       48       1076                 4     System                                                                       WIN-J9KO348JQVU
    214      10     6772       6664      1.201   3560     taskhost                                                                     WIN-J9KO348JQVU
     85       5     4960       2788      0.234   1752     VGAuthService                                                                WIN-J9KO348JQVU
     54       3      824       1952      0.031    712     vmacthlp                                                                     WIN-J9KO348JQVU
    286      12     8268       8920     29.578   1812     vmtoolsd                                                                     WIN-J9KO348JQVU
    210      10     8064      12108     20.389   3724     vmtoolsd                                                                     WIN-J9KO348JQVU
     76       5      988       1832      0.452    412     wininit                                                                      WIN-J9KO348JQVU
    117       5     1724       3628      0.452   3360     winlogon                                                                     WIN-J9KO348JQVU
    203       7     7328      10260      4.930    860     WmiPrvSE                                                                     WIN-J9KO348JQVU
    207       7     2628       3580      0.265   3424     wmpnetwk                                                                     WIN-J9KO348JQVU
    218      11    23216      32516      4.992   2392     wsmprovhost                                                                  WIN-J9KO348JQVU&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이렇게 다른 컴퓨터의 정보를 가져올 수 있습니다. 또한 SSH 처럼 사용할 수 있는데, &lt;code class=&quot;highlighter-rouge&quot;&gt;PSSession&lt;/code&gt;을 사용합니다.&lt;/p&gt;

&lt;p&gt;먼저 새로운 PSSession을 만들어야 합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;New-PSSession&lt;/code&gt;명령어를 사용합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; New-PSSession -ComputerName WIN-J9KO348JQVU -Credential k3y6reak

 Id Name            ComputerName    ComputerType    State         ConfigurationName     Availability
 -- ----            ------------    ------------    -----         -----------------     ------------
  1 WinRM1          WIN-J9KO348JQVU RemoteMachine   Opened        Microsoft.PowerShell     Available&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;위와 같이 연결이 된 후에 &lt;code class=&quot;highlighter-rouge&quot;&gt;Enter-PSSession&lt;/code&gt;을 이용하여 접속합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ps&quot; data-lang=&quot;ps&quot;&gt;PS C:\WINDOWS\system32&amp;gt; Enter-PSSession -id 1
[WIN-J9KO348JQVU]: PS C:\Users\k3y6reak\Documents&amp;gt; cd \
[WIN-J9KO348JQVU]: PS C:\&amp;gt; ls


    디렉터리: C:\


Mode                LastWriteTime     Length Name
----                -------------     ------ ----
d----        2009-07-14  오전 11:37            PerfLogs

d-r--        2017-08-25   오후 1:30            Program Files

d-r--        2017-08-30   오후 8:16            Users

d----        2017-08-25   오후 1:31            Windows

-a---        2009-06-11   오전 6:42         24 autoexec.bat

-a---        2009-06-11   오전 6:42         10 config.sys&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Enter-PSSession&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;-id&lt;/code&gt; 옵션 값은 &lt;code class=&quot;highlighter-rouge&quot;&gt;New-PSSession&lt;/code&gt;을 통해서 만들어진 &lt;code class=&quot;highlighter-rouge&quot;&gt;Id&lt;/code&gt;값입니다.&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry></feed>